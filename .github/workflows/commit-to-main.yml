name: Trigger basic downstream CI

permissions:
  contents: read

on:
  push:
    branches: [ "main" ]
# ready to go
# - boringssl
# - liboqs-python
# - liboqs-go
# - liboqs-java
# - liboqs-cpp
# - openssh
# - oqs-provider
#
# unsure
# - liboqs-rust (out of sync with main)
# - liboqs-dotnet (is this supported?)
# - oqs-demos (should this be triggered by liboqs?)
# - ci-containers (probably not necessary?)
#
# not necessary
# - liboqs (this project)
# - openssl (deprecated)
# - www (no CI)
# - tsc (no CI)
# - profiling (deprecated)
# - oqs-engine (deprecated)
# - libssh (inactive)
jobs:
  trigger-downstream-github-ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        subproject:
          - liboqs-cpp
          - liboqs-go
          - liboqs-python
    steps:
      - name: Trigger ${{ matrix.subproject }} CI
        run: |
          curl --silent \
               --write-out "\n%{response_code}\n" \
               --request POST \
               --header "Accept: application/vnd.github+json" \
               --header "Authorization: Bearer ${{ secrets.OQSBOT_GITHUB_ACTIONS }}" \
               --header "X-GitHub-Api-Version: 2022-11-28" \
               --data '{"event_type":"liboqs-upstream-trigger"}' \
               https://api.github.com/repos/open-quantum-safe/${{ matrix.subproject }}/dispatches | tee curl_out \
          && grep -q "204" curl_out

  trigger-downstream-circleci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - subproject: boringssl
            branch: master
          - subproject: liboqs-java
            branch: master
          - subproject: openssh
            branch: OQS-v8
          - subproject: oqs-provider
            branch: main
    steps:
      - name: Trigger ${{ matrix.subproject }} CI
        run: |
          curl --silent \
               --write-out "\n%{response_code}\n" \
               --user ${{ secrets.BUILD_TRIGGER_TOKEN }}: \
               --request POST \
               --header "Content-Type: application/json" \
               --data '{ "branch": "master", "parameters": { "run_downstream_tests": true } }' \
               https://circleci.com/api/v2/project/gh/open-quantum-safe/${{ matrix.subproject }}/pipeline | tee curl_out \
          && grep -q "201" curl_out
