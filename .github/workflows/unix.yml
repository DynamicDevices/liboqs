name: Linux and MacOS tests

permissions:
  contents: read

on: [ push, pull_request , workflow_dispatch]

env: 
  # Semi-colon separated list of algorithims with libjade implementations to
  # be passed as input to CMake option as: -DOQS_MINIMAL_BUILD=$LIBJADE_ALG_LIST
  # See CONFIGURE.md under ## OQS_MINIMAL_BUILD
  LIBJADE_ALG_LIST: "KEM_kyber_512;KEM_kyber_768" 

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          #          - name: noble
          #            runner: ubuntu-latest
          #            container: openquantumsafe/ci-ubuntu-latest:latest
          #            CMAKE_ARGS: -DOQS_ENABLE_SIG_STFL_LMS=ON -DOQS_ENABLE_SIG_STFL_XMSS=ON
          #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
          - name: noble-clang
            runner: ubuntu-latest
            container: openquantumsafe/ci-ubuntu-latest:latest
            CMAKE_ARGS: -DOQS_ENABLE_SIG_STFL_LMS=ON -DOQS_ENABLE_SIG_STFL_XMSS=ON -DCMAKE_C_COMPILER=clang
            PYTEST_ARGS: --ignore=tests/test_kat_all.py -k 'not (leaks and (Dilithium or ML-DSA))'
              #          - name: noble-hazardous # TODO timing out
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_ENABLE_SIG_STFL_LMS=ON -DOQS_ENABLE_SIG_STFL_XMSS=ON -DOQS_HAZARDOUS_EXPERIMENTAL_ENABLE_SIG_STFL_KEY_SIG_GEN=ON
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py -k 'LMS or XMSS'
              #          - name: noble-hazardous-clang # TODO timing out
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_ENABLE_SIG_STFL_LMS=ON -DOQS_ENABLE_SIG_STFL_XMSS=ON -DOQS_HAZARDOUS_EXPERIMENTAL_ENABLE_SIG_STFL_KEY_SIG_GEN=ON -DCMAKE_C_COMPILER=clang
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-nodistbuild
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_DIST_BUILD=OFF
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-generic
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_DIST_BUILD=OFF -DOQS_OPT_TARGET=generic
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-noopenssl
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_USE_OPENSSL=OFF
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-openssl-sha3
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_USE_OPENSSL_SHA3=ON
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-shared
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DBUILD_SHARED_LIBS=ON
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
          - name: noble-shared-openssl-dlopen
            runner: ubuntu-latest
            container: openquantumsafe/ci-ubuntu-latest:latest
            CMAKE_ARGS: -DBUILD_SHARED_LIBS=ON -DOQS_DLOPEN_OPENSSL=ON
            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-shared-noopenssl
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DBUILD_SHARED_LIBS=ON -DOQS_USE_OPENSSL=OFF
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-libjade
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_LIBJADE_BUILD=ON -DOQS_MINIMAL_BUILD=$LIBJADE_ALG_LIST
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-libjade-nodistbuild
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_LIBJADE_BUILD=ON -DOQS_MINIMAL_BUILD=$LIBJADE_ALG_LIST -DOQS_DIST_BUILD=OFF
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
              #          - name: noble-libjade-generic
              #            runner: ubuntu-latest
              #            container: openquantumsafe/ci-ubuntu-latest:latest
              #            CMAKE_ARGS: -DOQS_LIBJADE_BUILD=ON -DOQS_MINIMAL_BUILD=$LIBJADE_ALG_LIST -DOQS_DIST_BUILD=OFF -DOQS_OPT_TARGET=generic
              #            PYTEST_ARGS: --ignore=tests/test_kat_all.py
    runs-on: ${{ matrix.runner }}
    container:
      image: ${{ matrix.container }}
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v4
      - name: Configure
        run: mkdir build && cd build && cmake -GNinja -DOQS_STRICT_WARNINGS=ON ${{ matrix.CMAKE_ARGS }} .. && cmake -LA -N ..
      - name: Build
        run: ninja
        working-directory: build
      - name: Run tests
        timeout-minutes: 120 # TODO reduce
        run: mkdir -p tmp && python3 -m pytest --verbose --ignore=tests/test_code_conventions.py --numprocesses=auto ${{ matrix.PYTEST_ARGS }}
      - name: Package .deb
        if: matrix.name == 'jammy-std-openssl3'
        run: cpack
        working-directory: build
      - name: Retain .deb file
        if: matrix.name == 'jammy-std-openssl3'
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # pin@v3
        with:
          name: liboqs-openssl3-shared-x64
          path: build/*.deb
      - name: Check STD algorithm and alias
        if: matrix.name == 'jammy-std-openssl3'
        run: 'tests/dump_alg_info | grep -zoP "ML-DSA-44:\n    isnull: false" && tests/dump_alg_info | grep -zoP "ML-DSA-44-ipd:\n    isnull: true" && tests/dump_alg_info | grep -zoP "ML-KEM-512:\n    isnull: false" && tests/dump_alg_info | grep -zoP "ML-KEM-512-ipd:\n    isnull: true"'
        working-directory: build
